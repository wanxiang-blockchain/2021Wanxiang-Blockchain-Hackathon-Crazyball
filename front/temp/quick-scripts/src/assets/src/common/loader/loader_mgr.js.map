{"version":3,"sources":["assets/src/common/loader/loader_mgr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { handler, gen_handler } from \"../util\"\n\nexport class loader_mgr {\n    private static inst: loader_mgr;\n    private constructor() { };\n\n    static get_inst(): loader_mgr {\n        if (!loader_mgr.inst) {\n            loader_mgr.inst = new loader_mgr();\n        }\n        return loader_mgr.inst;\n    }\n\n    /**从远程url下载资源 */\n    loadExternalAsset(url: string, cb: handler, type?: string) {\n        const res = cc.loader.getRes(url);\n        if (res) {\n            cb.exec(res);\n            return;\n        }\n        cc.loader.load(type ? { url, type } : url, (err, res) => {\n            if (err) {\n                cc.warn(\"loadExternalAsset error\", url);\n                return;\n            }\n            cb.exec(res);\n        });\n    }\n\n    /**从远程url下载资源列表 */\n    loadExternalAssets(urls: string[], cb: handler, types?: string[]) {\n        let loaded_res = {};\n        let unloaded_urls: string[] = [];\n        urls.forEach(url => {\n            let res = cc.loader.getRes(url);\n            if (res) {\n                loaded_res[url] = res;\n            }\n            else {\n                unloaded_urls.push(url);\n            }\n        });\n        if (unloaded_urls.length == 0) {\n            cb.exec(loaded_res);\n            return;\n        }\n\n        const loadTasks = [];\n        unloaded_urls.forEach((url, i) => {\n            types ? loadTasks.push({ url, type: types[i] }) : loadTasks.push(url);\n        })\n        cc.loader.load(loadTasks, (errs, res) => {\n            cc.log(\"loadExternalAssets from remote url\");\n            if (errs) {\n                cc.warn(\"loadExternalAssets error\", errs);\n                return;\n            }\n            unloaded_urls.forEach(url => {\n                loaded_res[url] = res.getContent(url);\n            });\n            cb.exec(loaded_res);\n        });\n    }\n\n    /**从resources目录加载rawasset，rawaaset是指cc.Texture2D, cc.AudioClip, cc.ParticleAsset*/\n    loadRawAsset(url: string, cb: handler) {\n        let res: any = cc.loader.getRes(url);\n        if (res) {\n            cb.exec(res);\n            return;\n        }\n        cc.loader.loadRes(url, (err: any, res: any): void => {\n            if (err) {\n                cc.warn(\"loadRawAsset error\", url);\n                return;\n            }\n            cb.exec(res);\n        });\n    }\n\n    /**从resources目录加载asset，asset是指cc.SpriteFrame, cc.AnimationClip, cc.Prefab*/\n    loadAsset(url: string, cb: handler, asset_type: typeof cc.Asset): void {\n        let res: any = cc.loader.getRes(url, asset_type);\n        if (res) {\n            cb.exec(res);\n            return;\n        }\n        cc.loader.loadRes(url, asset_type, (err: any, res: any): void => {\n            if (err) {\n                cc.warn(\"loadAsset error\", url);\n                return;\n            }\n            cb.exec(res);\n        });\n    }\n\n    /**从resources目录加载asset/rawasset列表，省略资源后缀*/\n    loadResArray(urls: string[], cb: handler): void {\n        let loaded_res: any = {};\n        let unloaded_urls: string[] = [];\n        urls.forEach((url: string): void => {\n            let res: any = cc.loader.getRes(url);\n            if (res) {\n                loaded_res[url] = res;\n            }\n            else {\n                unloaded_urls.push(url);\n            }\n        });\n        if (unloaded_urls.length == 0) {\n            cb.exec(loaded_res);\n            return;\n        }\n        cc.loader.loadResArray(unloaded_urls, (err: any, res_arr: any[]): void => {\n            if (err) {\n                cc.warn(\"loadResArray error\", unloaded_urls);\n                return;\n            }\n            unloaded_urls.forEach((url: string): void => {\n                loaded_res[url] = cc.loader.getRes(url);\n            });\n            cb.exec(loaded_res);\n        });\n    }\n\n    /**从resources目录加载prefab(省略资源后缀)，加载成功后生成prefab实例*/\n    loadPrefabObj(url: string, cb: handler) {\n        let res: any = cc.loader.getRes(url, cc.Prefab);\n        if (res) {\n            let node: cc.Node = cc.instantiate(res);\n            cb.exec(node);\n            return;\n        }\n        //err is typeof Error, err.message\n        cc.loader.loadRes(url, cc.Prefab, (err: any, res: any): void => {\n            if (err) {\n                cc.warn(\"loadPrefabObj error\", url, err);\n                return;\n            }\n            let node: cc.Node = cc.instantiate(res);\n            cb.exec(node);\n        });\n    }\n\n    /**从resources目录加载prefab列表(省略资源后缀)，加载成功后生成prefab实例*/\n    loadPrefabObjArray(urls: string[], cb: handler): void {\n        let loaded_obj: any = {};\n        let unloaded_urls: string[] = [];\n        urls.forEach((url: string): void => {\n            let res: any = cc.loader.getRes(url, cc.Prefab);\n            if (res) {\n                loaded_obj[url] = cc.instantiate(res);\n            }\n            else {\n                unloaded_urls.push(url);\n            }\n        });\n        if (unloaded_urls.length == 0) {\n            cb.exec(loaded_obj);\n            return;\n        }\n        cc.loader.loadResArray(unloaded_urls, cc.Prefab, (err: any, res_arr: any[]): void => {\n            if (err) {\n                cc.warn(\"loadPrefabObjArray error\", unloaded_urls);\n                return;\n            }\n            unloaded_urls.forEach((url: string): void => {\n                loaded_obj[url] = cc.instantiate(cc.loader.getRes(url, cc.Prefab));\n            });\n            cb.exec(loaded_obj);\n        });\n    }\n\n    loadPrefabDir(dir_path: string, cb: handler): void {\n        let map: any = {};\n        cc.loader.loadResDir(dir_path, cc.Prefab, (err: any, res_arr: any[], urls: string[]): void => {\n            if (err) {\n                cc.warn(\"loadPrefabObjDir error\", dir_path);\n                return;\n            }\n            urls.forEach((url) => {\n                map[url] = cc.loader.getRes(url, cc.Prefab);\n            });\n            cb.exec(map);\n        });\n    }\n\n    loadPrefabObjDir(dir_path: string, cb: handler): void {\n        let map: any = {};\n        cc.loader.loadResDir(dir_path, cc.Prefab, (err: any, res_arr: any[], urls: string[]): void => {\n            if (err) {\n                cc.warn(\"loadPrefabObjDir error\", dir_path);\n                return;\n            }\n            urls.forEach((url) => {\n                map[url] = cc.instantiate(cc.loader.getRes(url, cc.Prefab));\n            });\n            cb.exec(map);\n        });\n    }\n\n    release(urlOrAssetOrNode: any): void {\n        if (urlOrAssetOrNode instanceof cc.Node) {\n            //释放节点,从场景上移除\n            urlOrAssetOrNode.destroy();\n        }\n        else {\n            //释放缓存引用和资源内容\n            cc.loader.release(urlOrAssetOrNode);\n        }\n    }\n}"]}