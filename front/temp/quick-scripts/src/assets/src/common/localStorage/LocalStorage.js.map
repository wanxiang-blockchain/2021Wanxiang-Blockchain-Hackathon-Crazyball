{"version":3,"sources":["assets/src/common/localStorage/LocalStorage.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import SingletonClass from \"../base/SingletonClass\";\n\n\nexport class LocalStorage extends SingletonClass {\n\n    public static ins() {\n        return super.ins() as LocalStorage\n    }\n\n    private _game_key = 'nonstop_balls_tt_'\n\n    public setLocal(key: string, value) {\n        try {\n            if (typeof value == 'object')\n                value = JSON.stringify(value)\n            cc.sys.localStorage.setItem(this.str_encrypt(this._game_key + key), this.str_encrypt(value, this._game_key + key))\n        } catch (e) {\n\n        }\n    }\n\n    public getLocal(key: string, defaultValue?) {\n        try {\n            let result = cc.sys.localStorage.getItem(this.str_encrypt(this._game_key + key));\n            if (result == null) {\n                return defaultValue\n            }\n            result = this.str_decrypt(result, this._game_key + key);\n\n            switch (typeof defaultValue) {\n                case 'object': {\n                    let ret = defaultValue;\n                    try {\n                        let parse = JSON.parse(result);\n                        if (typeof parse === 'object') {\n                            ret = parse;\n                        }\n                    } catch{\n\n                    }\n                    return ret;\n                }\n                case \"boolean\": {\n                    return (result === \"true\")\n                }\n                case \"number\": {\n                    return Number(result) || defaultValue;\n                }\n            }\n            return result\n        } catch (e) {\n            return defaultValue\n        }\n    }\n\n\t/**\n\t * 加密函数\n\t * @param str 待加密字符串\n\t * @returns {string}\n\t */\n    private str_encrypt(str: string, pwd: string = this._game_key) {\n        let pwd_length = 0;\n        for (let index = 0, len = pwd.length; index < len; index++) {\n            pwd_length += pwd.charCodeAt(index);\n        }\n\n        str = str.toString()\n        str += pwd;\n        let c = String.fromCharCode(str.charCodeAt(0) + str.length * pwd_length);\n        for (let i = 1; i < str.length; i++) {\n            c += String.fromCharCode(str.charCodeAt(i) + str.charCodeAt(i - 1));\n        }\n        return encodeURIComponent(c);\n    }\n\n\t/**\n\t * 解密函数\n\t * @param str 待解密字符串\n\t * @returns {string}\n\t */\n    private str_decrypt(str: string, pwd: string = this._game_key) {\n        let pwd_length = 0;\n        for (let index = 0, len = pwd.length; index < len; index++) {\n            pwd_length += pwd.charCodeAt(index);\n        }\n        str = str.toString()\n        str = decodeURIComponent(str);\n        let c = String.fromCharCode(str.charCodeAt(0) - str.length * pwd_length);\n        for (let i = 1; i < str.length; i++) {\n            c += String.fromCharCode(str.charCodeAt(i) - c.charCodeAt(i - 1));\n        }\n        return c.slice(0, c.length - pwd.length);\n    }\n}\n\nexport const CONST_STORAGE_KEY = {\n    KEY_MUSIC_VOLUME: `KEY_MUSIC_VOLUME`,\n    KEY_SOUND_VOLUME: `KEY_SOUND_VOLUME`,\n    KEY_SOUND_IS_MUTE: `KEY_SOUND_IS_MUTE`,\n    KEY_MUSIC_IS_MUTE: `KEY_MUSIC_IS_MUTE`,\n}\n"]}