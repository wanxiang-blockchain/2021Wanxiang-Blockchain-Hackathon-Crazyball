{"version":3,"sources":["assets/src/common/pool/pool_mgr.ts"],"names":[],"mappings":";;;;;;;AAAA,mDAAiD;AAEjD,qCAAmC;AAEnC;IAII;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,iBAAO,EAAE,CAAC;IACjC,CAAC;IAEM,iBAAQ,GAAf;QACI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACb,IAAI,CAAC,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;SAC/B;QACD,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,yBAAM,GAAN,UAAO,IAAY,EAAE,EAAW;QAC5B,IAAI,EAAE,GAAY,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,EAAE,EAAE;YACJ,+CAA+C;YAC/C,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACZ,OAAO;SACV;QACD,gDAAgD;QAChD,uBAAU,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,yBAAM,GAAN,UAAO,IAAY,EAAE,EAAW;QAC5B,IAAI,CAAC,EAAE,EAAE;YACL,EAAE,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;YACzC,OAAO;SACV;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAC/B,CAAC;IAED,+BAAY,GAAZ,UAAa,IAAY;QACrB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAED,wBAAK,GAAL;QACI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,uBAAI,GAAJ;QACI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IACL,eAAC;AAAD,CA7CA,AA6CC,IAAA;AA7CY,4BAAQ","file":"","sourceRoot":"/","sourcesContent":["import { loader_mgr } from \"../loader/loader_mgr\"\nimport { handler, gen_handler } from \"../util\"\nimport { ui_pool } from \"./ui_pool\"\n\nexport class pool_mgr {\n    private static _inst: pool_mgr;\n    private ui_pool: ui_pool;\n\n    private constructor() {\n        this.ui_pool = new ui_pool();\n    }\n\n    static get_inst(): pool_mgr {\n        if (!this._inst) {\n            this._inst = new pool_mgr();\n        }\n        return this._inst;\n    }\n\n    get_ui(path: string, cb: handler): void {\n        let ui: cc.Node = this.ui_pool.get(path);\n        if (ui) {\n            // cc.info(\"pool_mgr:get_ui from cache\", path);\n            cb.exec(ui);\n            return;\n        }\n        // cc.info(\"pool_mgr:get_ui from loader\", path);\n        loader_mgr.get_inst().loadPrefabObj(path, cb);\n    }\n\n    put_ui(path: string, ui: cc.Node): void {\n        if (!ui) {\n            cc.warn(\"pool_mgr:put_ui, invalid node\");\n            return;\n        }\n        this.ui_pool.put(path, ui);\n    }\n\n    clear_atpath(path: string) {\n        this.ui_pool.clear_atpath(path);\n    }\n\n    clear() {\n        this.ui_pool.clear();\n    }\n\n    dump() {\n        this.ui_pool.dump();\n    }\n}"]}