{"version":3,"sources":["assets/src/common/ui/pop_mgr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { pool_mgr } from \"../pool/pool_mgr\"\nimport { handler, gen_handler } from \"../util\"\nimport { POP_UI_BASE } from \"./pop_ui_base\"\nimport { TimerMgr } from \"../timer/timer_mgr\"\nimport * as utils from '../util'\nimport { Tween } from \"../tween/Tween\";\n\nexport class pop_mgr {\n    private static inst: pop_mgr;\n    private ui_cache: any;           //path => pop_ui\n    private ui_stack: Array<string>; //ui stacks\n    private ui_show_handler: handler;\n    private ui_hide_handler: handler;\n\n    private constructor() {\n        this.ui_cache = {};\n        this.ui_stack = new Array<string>();\n    }\n\n    static get_inst(): pop_mgr {\n        if (!this.inst) {\n            this.inst = new pop_mgr();\n        }\n        return this.inst;\n    }\n\n    private get_ui(path: string): pop_ui {\n        let ui: pop_ui = this.ui_cache[path];\n        if (!ui) {\n            this.ui_cache[path] = ui = { node: null, is_show: false };\n        }\n        return ui;\n    }\n\n    clear() {\n        for (let path in this.ui_cache) {\n            this.hide(path);\n        }\n        this.ui_cache = {};\n        this.ui_stack.length = 0;\n    }\n\n    peek() {\n        return this.ui_stack[this.ui_stack.length - 1];\n    }\n\n    set_handlers(on_ui_show: handler, on_ui_hide: handler) {\n        this.ui_show_handler = on_ui_show;\n        this.ui_hide_handler = on_ui_hide;\n    }\n\n    is_show(path: string): boolean {\n        let ui: pop_ui = this.ui_cache[path];\n        return ui != null;\n    }\n\n    show(path: string, transition?: UI_TRANSITION, ...params: any[]): void {\n        let ui: pop_ui = this.get_ui(path);\n        if (ui.is_show) {\n            return;\n        }\n        ui.is_show = true;\n        pool_mgr.get_inst().get_ui(path, gen_handler((node: cc.Node): void => {\n            if (!ui.is_show) {\n                pool_mgr.get_inst().put_ui(path, node);\n                return;\n            }\n            ui.node = node;\n            //应用过渡效果\n            this.applyTransitionEffect(node, transition);\n            cc.director.getScene().getChildByName('Canvas').getChildByName('mid_layer').addChild(node);\n            TimerMgr.getInst().once(0, utils.gen_handler(() => {\n                //在加到场景同一帧调用界面show方法，计算位置会不准确，故统一在下一帧调用show\n                if (!ui.is_show) {\n                    return;\n                }\n                let ui_base = node.getComponent(POP_UI_BASE) as POP_UI_BASE;\n                ui_base.ui_name = path;\n                ui_base.__show__(...params);\n                //进栈\n                this.ui_stack.push(path);\n                //钩子函数调用\n                if (this.ui_show_handler) {\n                    this.ui_show_handler.exec();\n                }\n            }));\n        }, this));\n    }\n\n    //关闭界面时不destroy，只是从父节点移除并缓存\n    hide(path: string): void {\n        let ui: pop_ui = this.ui_cache[path];\n        if (!ui) {\n            return;\n        }\n        this.ui_cache[path] = null;\n        ui.is_show = false;\n        if (ui.node) {\n            pool_mgr.get_inst().put_ui(path, ui.node);\n            //调用hide\n            let ui_base = ui.node.getComponent(POP_UI_BASE) as POP_UI_BASE;\n            ui_base.__hide__();\n            //出栈\n            const lastIdx = this.ui_stack.lastIndexOf(path);\n            if (lastIdx != -1) {\n                this.ui_stack.splice(lastIdx, 1);\n            }\n            //钩子函数调用\n            if (this.ui_hide_handler) {\n                this.ui_hide_handler.exec();\n            }\n        }\n    }\n\n    applyTransitionEffect(node: cc.Node, transition: UI_TRANSITION) {\n        if (transition && transition.transType == UI_TRANSITION_TYPE.None) {\n            return;\n        }\n        transition = transition || {\n            transType: UI_TRANSITION_TYPE.FadeIn,\n            duration: 500,\n        };\n        switch (transition.transType) {\n            case UI_TRANSITION_TYPE.FadeIn:\n                Tween.removeTweens(node);\n                node.opacity = 0;\n                Tween.get(node).to({ opacity: 255 }, transition.duration);\n                break;\n        }\n    }\n}\n\ntype pop_ui = {\n    node: cc.Node;\n    is_show: boolean;\n}\n\n//界面prefab路径配置, 相对于assets/resources目录\nexport const UI_CONFIG = {\n    overlay_bg: \"prefab/panels/panel_overlay_bg\",\n}\n\ninterface UI_TRANSITION {\n    transType: UI_TRANSITION_TYPE;\n    tweenFunc?: Function;\n    duration?: number;\n}\n\nexport const enum UI_TRANSITION_TYPE {\n    None = 1,\n    FadeIn,\n    DropDown,\n    PopUp,\n    LeftIn,\n    RightIn,\n}"]}