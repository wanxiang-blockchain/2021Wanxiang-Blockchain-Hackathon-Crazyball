{"version":3,"sources":["assets/src/common/util.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { loader_mgr } from \"../common/loader/loader_mgr\"\n// import * as consts from \"../consts\"\n\nlet handler_pool: handler[] = [];\nlet handler_pool_size = 10;\n\n//用于绑定回调函数this指针\nexport class handler {\n    private cb: Function;\n    private host: any;\n    private args: any[];\n\n    constructor() { }\n\n    init(cb: Function, host = null, ...args) {\n        this.cb = cb;\n        this.host = host;\n        this.args = args;\n    }\n\n    exec(...extras) {\n        this.cb.apply(this.host, this.args.concat(extras));\n    }\n}\n\nexport function gen_handler(cb: Function, host: any = null, ...args: any[]): handler {\n    let single_handler: handler = handler_pool.length < 0 ? handler_pool.pop() : new handler()\n    //这里要展开args, 否则会将args当数组传给wrapper, 导致其args参数变成2维数组[[]]\n    single_handler.init(cb, host, ...args);\n    return single_handler;\n}\n\nexport function load_img(sprite: cc.Sprite, img_path: string) {\n    loader_mgr.get_inst().loadAsset(img_path, gen_handler((res) => {\n        sprite.spriteFrame = res;\n    }), cc.SpriteFrame);\n}\n\nexport function load_plist_img(sprite: cc.Sprite | cc.ParticleSystem, plist_path: string, key: string) {\n    loader_mgr.get_inst().loadAsset(plist_path, gen_handler((res: cc.SpriteAtlas) => {\n        const spriteFrame = res.getSpriteFrame(key);\n        // cc.log(res);\n        if (spriteFrame) {\n            sprite.spriteFrame = spriteFrame;\n        } else {\n            cc.warn(`path error (${plist_path} ${key})`);\n        }\n    }), cc.SpriteAtlas);\n}\n\nconst _external_img_cache: { [url: string]: cc.SpriteFrame } = {};\nexport function load_external_img(sprite: cc.Sprite, img_url: string, type?: string) {\n    if (_external_img_cache[img_url]) {\n        sprite.spriteFrame = _external_img_cache[img_url];\n        return;\n    }\n\n    sprite.node.active = false;\n    loader_mgr.get_inst().loadExternalAsset(img_url, gen_handler((res) => {\n        _external_img_cache[img_url] = new cc.SpriteFrame(res);\n\n        if (sprite.node) {\n            sprite.node.active = true;\n            sprite.spriteFrame = _external_img_cache[img_url];\n        }\n    }), type);\n}\n\nexport function strfmt(fmt: string, ...args: any[]) {\n    return fmt.replace(/\\{(\\d+)\\}/g, (match: string, argIndex: number) => {\n        return args[argIndex] || match;\n    });\n}\n\nexport function extend(target, ...sources) {\n    for (var i = 0; i < sources.length; i += 1) {\n        var source = sources[i];\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n    return target;\n}\n\nexport function createBreathAction(node: cc.Node) {\n    const action = cc.repeatForever(cc.sequence(cc.scaleTo(0.6, 1.1), cc.scaleTo(0.6, 0.9)));\n    node.runAction(action);\n}\n\nexport function destroyBreathAction(node: cc.Node) {\n    node.stopAllActions();\n}"]}