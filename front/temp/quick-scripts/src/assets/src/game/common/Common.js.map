{"version":3,"sources":["assets/src/game/common/Common.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["export const formatPrice = (num, scale = 4, replenish = false, splitCode = ',') => {\n  let str = toFixed(num, scale, replenish).toString();\n  let res = str || '0';\n  let dot = '';\n  const find = str.indexOf('.');\n  if (find !== -1) {\n    res = str.substring(0, find);\n    dot = str.substring(str.length, find);\n  }\n  const intSum = res.replace(/\\B(?=(?:\\d{3})+$)/g, splitCode);\n  const ret = intSum + dot;\n  return ret;\n};\n\nexport const toFixed = (number, scale = 4, replenish = false, roundOff = true) => {\n  let res = '';\n  if (number) {\n    let str = `${number}`;\n    if (str.indexOf('e') > -1 || str.indexOf('E') > -1) {\n      let str = number.toFixed(scale + 1);\n      res = str.substring(0, str.length - 1);\n    } else if (str.indexOf('.') > -1) {\n      if (scale === 0) {\n        res = str.substring(0, str.indexOf('.'));\n      } else {\n        if (roundOff) {\n          let resArr = res.toString().split('.');\n          if (resArr[1]) {\n            res = str.substring(0, str.indexOf('.') + scale + 1 + 1);\n            res = accDiv(Math.round(accMul(Number(res), Math.pow(10, scale))), Math.pow(10, scale)).toString();\n          } else {\n            res = str.substring(0, str.indexOf('.') + scale + 1);\n          }\n        } else {\n          res = str.substring(0, str.indexOf('.') + scale + 1);\n        }\n      }\n    } else {\n      res = str;\n    }\n  }\n  if (replenish) {\n    res = res || '0';\n    let resArr = res.toString().split('.');\n    if (resArr[1]) {\n      let diff = scale - resArr[1].length;\n      if (diff > 0) {\n        let a = [];\n        a.length = diff;\n        a.fill(0);\n        let pushStr = a.join('');\n        res = res + pushStr;\n      }\n    } else {\n      if (Number(scale)) {\n        let a = [];\n        a.length = scale;\n        a.fill(0);\n        let pushStr = a.join('');\n        res = `${res}.${pushStr}`;\n      }\n    }\n  }\n\n  return res;\n};\n\n export const accMul = (arg1 = 0, arg2 = 0) => {\n  let m = 0;\n  const s1 = arg1.toString();\n  const s2 = arg2.toString();\n\n  try {\n    m += s1.split('.')[1].length;\n  } catch (e) {}\n  try {\n    m += s2.split('.')[1].length;\n  } catch (e) {}\n  return (Number(s1.replace('.', '')) * Number(s2.replace('.', ''))) / Math.pow(10, m);\n};\n\n export function accDiv(arg1, arg2) {\n  let t1 = 0;\n  let t2 = 0;\n  let r1;\n  let r2;\n\n  try {\n    t1 = arg1.toString().split('.')[1].length;\n  } catch (e) {}\n  try {\n    t2 = arg2.toString().split('.')[1].length;\n  } catch (e) {}\n  r1 = Number(arg1.toString().replace('.', ''));\n  r2 = Number(arg2.toString().replace('.', ''));\n  return (r1 / r2) * Math.pow(10, t2 - t1);\n}"]}